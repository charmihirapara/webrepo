
17/10/2022 : Monday
    - Installation of Twig [Terminal]
        - Install Composer --> install composer
        - Install Twig --> composer require "twig/twig:^3.0"

    - Introduction to Twig
    [ALL IN HTML FILE] :

        * Global variables : _self, _context, _charset
        * set variables :
            - {% set foo = 'abc' %}
        * Filters :
            - we can use multiple using pipe [|] sign
            - {{ list|join(', ') }}
            - {% apply upper %}
                text text text
              {% endapply %}
        * Functions :
            {{ range(...) }}, {{ min(,,) }}, {{ max(,,) }}
        * Control Structure : if|for
            {% if users|length > 0 %}
                <ul>
                    {% for user in users %}
                        <li>{{ user.username|e }}</li>
                    {% endfor %}
                </ul>
            {% endif %}
        * Comments :
            {#
            ..
            ...
            #}
        * Include other templates :
            {{ include('abc.html') }}

        * Templates of Inheritance
            - Here we have to define block in file..
            - we can extend one file in another file like {{ extends "abc.html" }}
                and here we can access any block of perent file using {{ parent() }}
            - we can create one block :
                Example :
                    {% block title %}
                        ...
                    {% endblock %}
                    {% block head %}
                        ...
                    {% endblock %}
    [ALL IN PHP FILE]

        * Load our Templates :
            -   $loader = new \Twig\Loader\FilesystemLoader('/path/to/templates');
                $twig = new \Twig\Environment($loader);
        * Render our Templates :
            - echo $twig->render('index.html', ['the' => 'variables', 'go' => 'here']);
        * Render via Block
            - echo $template->renderBlock('block_name', ['the' => 'variables', 'go' => 'here']);

*********************  Sublime Text Editor has some twig settings for syntax : *********************
        $ cd ~/.config/sublime-text/Packages/
        $ git clone https://github.com/Anomareh/PHP-Twig.tmbundle.git PHP-Twig
        $ mv PHP-Twig/Syntaxes/* PHP-Twig/

****************************************************************************************************

    - Create One Project Using twig template
        - First Create bootstrap file in Twig Directory
        - After create onr helloworld.php file in Twig Directory
        - Create one Directory name is template which store the all .html.twig files
            * In Bootstrap file has :
                 <?php
                    // Load our autoloader
                    require_once __DIR__.'/vendor/autoload.php';

                    // Specify our Twig templates location
                    $loader = new \Twig\Loader\FilesystemLoader(__DIR__ . '/templates');

                    // Instantiate our Twig
                    $twig = new \Twig\Environment($loader);
                ?>
            * In helloworld.php file has :
                 <?php
                    require_once __DIR__.'/bootstrap.php';

                    $parameters = [
                    'my_var' => 'Hello world !!!',
                    'name' => 'Charmi ',
                    'surname' => ' Hirapara'
                    ];

                    // Render our view
                    echo $twig->render('helloworld.html.twig', $parameters);
                ?>
            * helloworld.html.twig file has :
                <!DOCTYPE html>
                <html>
                <head>
                    <meta charset="utf-8">
                    <meta name="viewport" content="width=device-width, initial-scale=1">
                    <title>Twig - Simple file</title>
                </head>
                <body>
                        <h2>{{ name ~ surname }}</h2>
                        <h5>{{ my_var }}</h5>
                        {% if my_var == 'Hello world !!!' %}
                        <h1>Yes</h1>
                        {% endif %}
                </body>
                </html>

18/10/2022 : Tuesday
Tags :
    - apply : Whenever we have to modify or apply like[upper case, lower case] on string we can using apply using | pipe sign
            {% apply upper %} This is Text {% endapply %}
    - block : Here we can definr different blocks like [title, body, footer, head]
            {% block title %} This is title {% endblock %}
        - Here we can print it -> {{ block('title') }}
    - do : Like Regular Expression Dosen't Print Anything
    - flush : flush output of the buffer
    - for : Itls like loop
        Variable	Description
            loop.index	The current iteration of the loop. (1 indexed)
            loop.index0	The current iteration of the loop. (0 indexed)
            loop.revindex	The number of iterations from the end of the loop (1 indexed)
            loop.revindex0	The number of iterations from the end of the loop (0 indexed)
            loop.first	True if first iteration
            loop.last	True if last iteration
            loop.length	The number of items in the sequence
            loop.parent	The parent context
    - if : Conditional Statements
            {% if user.name == 'geeta ' %}
                <p>If Condition True [ {{user.name}} ]</p>
            {% endif %}
    - set : set the value of the variables
        {% set var1 = 'value1' %} {{ var1 }}
    - verbatim : It return raw text means that which we have to write that is return
        {% verbatim %}
			<ul>
			    {% for users in user %}
			        <li>{{ users }}</li>
			    {% endfor %}
			  </ul>
		{% endverbatim %}
    - with : it's define local varible means it's make scope of the variables
        {% with { foo: 42 } %}
            {{ foo }} {# foo is 42 here #}
        {% endwith %}

- Filters :
    - abs : return positive number | Absoulate value
    - batch : Arrange the data with given parameters, return the value which is null in list
            batch(3, 'No Item') : 3 is how many columns & 'No Item'  wrote where null value
    - capitalize : return first charector capital
    - column : return specific column from array
    - convert_encoding : convert the data to encode
    *- country_name : give country name of given short name
    *- currency_name : Return currence name of given by code
    *- currency_symbol : Return symbol
    - date : return date
    - date_modify : we can modify date
    - default : Here we can define default value of variable
    - filter : we have to write condition than Return filter it
    - first : Returns first elements of string or Array
    - last : Returns last elements of string or Array
    - format - It's return specific string
    *- format_currency : convert it that
    *- format_datetime : convert date & time
    *- format_number : Formate the number
    *- html_to_markdown
    *- inline_css : apply inline css within apply block
    - join : it's can join with specific charecter
    - json_encode() : Make json data to encode
    - map : map the array to String
    - merge : merge the existing string
    - number_format : make number format perfectly
    - reduce : addition number
    - lower : translate lower case
    - upper : translate upper case
    - reverse : revrse the String
    - replace : replace specific String
    - round : round the number
    - slice : return the given parameters
        slice(0,2): 0 is Strting Index & 2 is Length of string
    - sort : sort the data
    - split : return the array
    - title : return first character of words in capital
    - trim : remove white space of string
    *- u:
    - url_encode : Make URL Encode


















